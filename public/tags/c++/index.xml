<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Zane_ZHANG</title>
    <link>http://example.org/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Zane_ZHANG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>houze.zhang@etu.utc.fr (Zane_ZHANG)</managingEditor>
    <webMaster>houze.zhang@etu.utc.fr (Zane_ZHANG)</webMaster>
    <lastBuildDate>Wed, 05 Jul 2023 15:17:12 +0200</lastBuildDate><atom:link href="http://example.org/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Type Conversion</title>
      <link>http://example.org/posts/cpp/type-conversion/</link>
      <pubDate>Wed, 05 Jul 2023 15:17:12 +0200</pubDate>
      <author>houze.zhang@etu.utc.fr (Zane_ZHANG)</author>
      <guid>http://example.org/posts/cpp/type-conversion/</guid>
      <description>Background This post is excerpted from the 2.1.2 section of C++primer and contains the parts I think are important as well as my comments. The answers to the practice questions in subsection 2.1.2 are included.
Highlights The type of an object defines the data that an object might contain and what operations that object can perform. Among the operations that many types support is the ability to convert objects of the given type to other, related types.</description>
    </item>
    
    <item>
      <title>Varying Parameters in C&#43;&#43;</title>
      <link>http://example.org/posts/cpp/varying-parameters-in-c&#43;&#43;/</link>
      <pubDate>Tue, 04 Jul 2023 23:47:17 +0200</pubDate>
      <author>houze.zhang@etu.utc.fr (Zane_ZHANG)</author>
      <guid>http://example.org/posts/cpp/varying-parameters-in-c&#43;&#43;/</guid>
      <description>Background There are three methods to implement varying parameters in C++. This post will summarize those three methods, and giving my solutions to related exercise in [1].
initializer_list Some notes on using initializer_listï¼š
Using for loop to iterate initializer_list object Elements should be the same type in initializer_list Which is a template library type Elements are always const in initializer_list When copy initializer_list objects, the elements underlayer will not be copied.</description>
    </item>
    
  </channel>
</rss>
